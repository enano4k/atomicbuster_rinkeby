{"version":3,"sources":["components/BetChart.js","components/HostControl.js","components/BetForm.js","components/Player1Control.js","components/Player2Control.js","App.js","serviceWorker.js","components/Header.js","index.js","utils/getWeb3.js","Host.js","ipfs.js"],"names":["BetChart","state","data","name","_this","props","player1_name","value","Number","player1_pot","player2_name","player2_pot","RADIAN","Math","PI","renderCustomizedLabel","_ref","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","react_default","a","createElement","fill","textAnchor","dominantBaseline","concat","toFixed","COLORS","_this2","this","index_es","es6","width","height","labelLine","label","dataKey","map","entry","key","length","React","Component","HostControl","closeBetsJS","_callee","regenerator_default","wrap","_context","prev","next","contract","methods","closeBets","money_match_id","send","from","account","stop","player1WinsJS","_callee2","_context2","player1Wins","player2WinsJS","_callee3","_context3","player2Wins","cashOutHostJS","_callee4","_context4","cashOutHost","maxWidth","mx","p","h2","required","onClick","has_host_cashed_out","is_cashout_enabled","host_cut","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","player1_bet_amount","player2_bet_amount","betPlayer1JS","asyncToGenerator","mark","bet","web3","utils","toWei","updateStats","betPlayer2JS","handlePlayer1BetAmountChange","bind","assertThisInitialized","handlePlayer2BetAmountChange","event","setState","target","bet_some_more_flag","type","placeholder","onChange","Player1Control","cashOutPlayer1JS","cashOutPlayer1","runExample","h3","is_player1_wins","has_player1_cashed_out","winner_cut","Player2Control","cashOutPlayer2JS","cashOutPlayer2","is_player2_wins","has_player2_cashed_out","App","required_network","image_ipfs_hash","player","total_pot","my_player1_bet","my_player2_bet","my_player1_earnings","my_player2_earnings","storageValue","is_bets_open","other_money_matches","is_host","is_player1","is_player2","has_cashed_out_player1_bet","has_cashed_out_player2_bet","accounts","network_id","componentDidMount","window","ethereum","parseInt","networkVersion","eth","getAccounts","onGetAccounts","connectToWeb3","deployedNetwork","instance","getWeb3","sent","net","getId","SimpleStorageContract","networks","Contract","abi","address","match","params","t0","alert","console","error","cashOutPlayer1BetJS","_this$state","cashOutPlayer1Bet","cashOutPlayer2BetJS","_this$state2","cashOutPlayer2Bet","_callee5","_context5","getOtherMoneyMatches","preventDefault","log","getPlayer1Name","getPlayer2Name","getSummary","summary","getImageIPFSHash","getPlayer1Pot","getPlayer2Pot","getCutFreePot","cut_free_pot","getPlayer1BetByAddress","getPlayer2BetByAddress","isBetsOpen","isCashoutEnabled","isPlayer1Wins","isPlayer2Wins","isAddressHost","isAddressPlayer1","isAddressPlayer2","hasCashedOutPlayer1Bet","hasCashedOutPlayer2Bet","hasHostCashedOut","hasPlayer1CashedOut","hasPlayer2CashedOut","getHostCut","getWinnerCut","hexToUtf8","fromWei","toString","that","getPastEvents","fromBlock","toBlock","events","i","eventObj","push","id","returnValues","e","otherMoneyMatches","money_match","h4","href","src","index_umd_default","currentNetwork","requiredNetwork","dist_index_umd_default","onWeb3Fallback","h1","borderRadius","components_BetChart","BetForm","components_HostControl","components_Player1Control","components_Player2Control","Boolean","location","hostname","Header","bg","justifyContent","flexDirection","fontSize","color","italic","ReactDOM","render","styled_components_browser_esm","theme","components_Header","react_router_dom","react_router","path","component","Host","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Promise","resolve","reject","_home_turupawn_Projects_Dapps_MoneyMatches_client_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_turupawn_Projects_Dapps_MoneyMatches_client_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","_web","provider","_web2","Web3","enable","providers","HttpProvider","Admin","_home_turupawn_Projects_Dapps_MoneyMatches_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_turupawn_Projects_Dapps_MoneyMatches_client_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_turupawn_Projects_Dapps_MoneyMatches_client_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","address_player1","address_player2","host_cut_percentage","winner_cut_percentage","image_buffer","networkId","createMoneyMatchJS","ipfs","files","add","result","hash","createMoneyMatch","handleAddressPlayer1Change","_home_turupawn_Projects_Dapps_MoneyMatches_client_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","handleAddressPlayer2Change","handleHostCutPercentageChange","handleWinnerCutPercentageChange","handlePlayer1NameChange","handlePlayer2NameChange","handleSummaryChange","handleImageChange","utf8ToHex","file","reader","FileReader","readAsArrayBuffer","onloadend","Buffer","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","require","host","port","protocol"],"mappings":"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","file":"atomicbuster_rinkeby/static/js/main.98f8b2fc.chunk.js","sourcesContent":["import React from \"react\";\nimport { Box } from \"rimble-ui\";\nimport {\n  PieChart, Pie, Cell,\n} from 'recharts';\n\n\nclass BetChart extends React.Component {\n  state = {\n    data: [\n      { name: this.props.player1_name, value: Number(this.props.player1_pot) },\n      { name: this.props.player2_name, value: Number(this.props.player2_pot) }\n    ],\n    RADIAN: Math.PI / 180,\n    renderCustomizedLabel: ({\n      cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n    }) => {\n      const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n      const x = cx + radius * Math.cos(-midAngle * this.state.RADIAN);\n      const y = cy + radius * Math.sin(-midAngle * this.state.RADIAN);\n    \n      return (\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n          {`${(percent * 100).toFixed(0)}% ${this.state.data[index].name}`}\n        </text>\n      );\n    },\n    COLORS: ['#0088FE', '#00C49F', '#FFBB28', '#FF8042']\n  };\n\n  render() {\n    return (\n      <Box>\n        <PieChart width={450} height={450}>\n          <Pie\n            data={this.state.data}\n            cx={200}\n            cy={200}\n            labelLine={false}\n            label={this.state.renderCustomizedLabel}\n            outerRadius={200}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {\n              this.state.data.map((entry, index) => <Cell key={`cell-${index}`} fill={this.state.COLORS[index % this.state.COLORS.length]} />)\n            }\n          </Pie>\n        </PieChart>\n      </Box>\n    );\n  }\n}\n\nexport default BetChart;","import React from \"react\";\nimport {\n  Box,\n  Button,\n  Heading,\n  Field,\n  Text\n} from \"rimble-ui\";\n\nclass HostControl extends React.Component {\n  closeBetsJS = async () => {\n    await this.props.contract.methods.closeBets(this.props.money_match_id).send({ from: this.props.account });\n  };\n\n  player1WinsJS = async () => {\n    await this.props.contract.methods.player1Wins(this.props.money_match_id).send({ from: this.props.account });\n  };\n\n  player2WinsJS = async () => {\n    await this.props.contract.methods.player2Wins(this.props.money_match_id).send({ from: this.props.account });\n  };\n\n  cashOutHostJS = async () => {\n    await this.props.contract.methods.cashOutHost(this.props.money_match_id).send({ from: this.props.account });\n  };\n    \n  render() {\n    return (\n      <Box maxWidth={'640px'} mx={'auto'} p={3}>\n        <Heading.h2>Host Menu</Heading.h2>\n        <Field width={1}>\n          <Button required=\"true\" onClick={this.closeBetsJS}>Close bets</Button>\n        </Field>\n        <Field width={1}>\n          <Button required=\"true\" onClick={this.player1WinsJS}>{this.props.player1_name} Wins!</Button>\n        </Field>\n        <Field width={1}>\n          <Button required=\"true\" onClick={this.player2WinsJS}>{this.props.player2_name} Wins!</Button>\n        </Field>\n        {!this.props.has_host_cashed_out && this.props.is_cashout_enabled &&\n          <Field width={1}>\n            <Button required=\"true\" onClick={this.cashOutHostJS}>Collect {this.props.host_cut} eth</Button>\n          </Field>\n        }\n        {this.props.has_host_cashed_out &&\n          <Text>You collected {this.props.host_cut} eth</Text>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default HostControl;","import React from \"react\";\nimport { Box, Heading, Field, Input, Button } from \"rimble-ui\";\n\nclass HostControl extends React.Component {\n  state = {\n    player1_bet_amount: \"\",\n    player2_bet_amount: \"\"\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.handlePlayer1BetAmountChange = this.handlePlayer1BetAmountChange.bind(this);\n    this.handlePlayer2BetAmountChange = this.handlePlayer2BetAmountChange.bind(this);\n  }\n\n  handlePlayer1BetAmountChange(event) {\n    this.setState({player1_bet_amount: event.target.value});\n  }\n\n  handlePlayer2BetAmountChange(event) {\n    this.setState({player2_bet_amount: event.target.value});\n  }\n\n  betPlayer1JS = async () => {\n    await this.props.contract.methods.bet(\n      this.props.money_match_id,\n      \"1\"\n    ).send({ from: this.props.account, value: this.props.web3.utils.toWei(this.state.player1_bet_amount, 'ether') });\n    this.props.updateStats();\n  };\n\n  betPlayer2JS = async () => {\n    await this.props.contract.methods.bet(\n      this.props.money_match_id,\n      \"2\"\n    ).send({ from: this.props.account, value: this.props.web3.utils.toWei(this.state.player2_bet_amount, 'ether') });\n    this.props.updateStats();\n  };\n\n  render() {\n    return (\n      <Box maxWidth={'640px'} mx={'auto'} p={3}>\n        {this.props.bet_some_more_flag &&\n          <Heading.h2>Bet some more?</Heading.h2>\n        }\n        {!this.props.bet_some_more_flag &&\n          <Heading.h2>Place your bets!</Heading.h2>\n        }\n        <Field>\n          <Input type=\"text\" required={true} placeholder=\"e.g. 0.5\" onChange={this.handlePlayer1BetAmountChange} />\n        </Field>\n        <Field>\n          <Button width={1} required={true} onClick={this.betPlayer1JS}>Bet for {this.props.player1_name}</Button>\n        </Field>\n        <Field>\n          <Input type=\"text\" required={true} placeholder=\"e.g. 0.5\" onChange={this.handlePlayer2BetAmountChange} />\n        </Field>\n        <Field>        \n          <Button width={1} required={true} onClick={this.betPlayer2JS}>Bet for {this.props.player2_name}</Button>\n        </Field>\n      </Box>\n    );\n  }\n}\n\nexport default HostControl;","import React, { Component } from \"react\";\nimport {\n    Box,\n    Button,\n    Heading,\n    Text\n  } from 'rimble-ui';\n\nclass Player1Control extends Component {\n  cashOutPlayer1JS = async () => {\n    await this.props.contract.methods.cashOutPlayer1(this.props.money_match_id).send({ from: this.props.account });\n  };\n\n  runExample = async () => {\n  };\n\n  render() {\n    return (\n      <Box maxWidth={'640px'} mx={'auto'} p={3}>\n        <Heading.h3>{this.props.player1_name} menu</Heading.h3>\n        {this.props.is_player1_wins &&\n          <Box>\n            <Heading.h3>You win!</Heading.h3>\n            {!this.props.has_player1_cashed_out &&\n              <Button onClick={this.cashOutPlayer1JS}>Collect {this.props.winner_cut} eth</Button>\n            }\n            {this.props.has_player1_cashed_out &&\n              <Text>You collected {this.props.winner_cut} eth</Text>\n            }\n          </Box>\n        }\n        {!this.props.is_player1_wins && this.props.is_cashout_enabled &&\n          <Box>\n            <Heading.h3>You lose</Heading.h3>\n          </Box>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Player1Control;\n","import React, { Component } from \"react\";\nimport {\n    Box,\n    Button,\n    Heading,\n    Text\n  } from 'rimble-ui';\n\nclass Player2Control extends Component {\n  cashOutPlayer2JS = async () => {\n    await this.props.contract.methods.cashOutPlayer2(this.props.money_match_id).send({ from: this.props.account });\n  };\n\n  runExample = async () => {\n  };\n\n  render() {\n    return (\n      <Box maxWidth={'640px'} mx={'auto'} p={3}>\n        <Heading.h3>{this.props.player2_name} menu</Heading.h3>\n        {this.props.is_player2_wins &&\n          <Box>\n            <Heading.h3>You win!</Heading.h3>\n            {!this.props.has_player2_cashed_out &&\n              <Button onClick={this.cashOutPlayer2JS}>Collect {this.props.winner_cut} eth</Button>\n            }\n            {this.props.has_player2_cashed_out &&\n              <Text>You collected {this.props.winner_cut} eth</Text>\n            }\n          </Box>\n        }\n        {!this.props.is_player2_wins && this.props.is_cashout_enabled &&\n          <Box>\n            <Heading.h3>You lose</Heading.h3>\n          </Box>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Player2Control;\n","import React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport {\n  Box,\n  Link,\n  Card,\n  Heading,\n  Text,\n  Image,\n  Button\n} from 'rimble-ui';\nimport NetworkIndicator from '@rimble/network-indicator';\nimport ConnectionBanner from '@rimble/connection-banner';\nimport BetChart from \"./components/BetChart\";\nimport HostControl from \"./components/HostControl\";\nimport BetForm from \"./components/BetForm\";\nimport Player1Control from \"./components/Player1Control\";\nimport Player2Control from \"./components/Player2Control\";\n\nclass App extends Component {\n  state = { required_network: 4, // Hardcoded preset Rinkeby 4 and local 5777\n            money_match_id: \"1\",\n            player1_name: \"\",\n            player2_name: \"\",\n            image_ipfs_hash: \"\",\n            player: \"\",\n            total_pot: 0,\n            player1_pot: \"0\",\n            player2_pot: \"0\",\n            my_player1_bet: 0,\n            my_player2_bet: 0,\n            my_player1_earnings: 0,\n            my_player2_earnings: 0,\n            is_player1_wins: false,\n            is_player2_wins: false,\n            storageValue: 0,\n            is_bets_open: false,\n            is_cashout_enabled: false,\n            other_money_matches: [],\n            is_host: false,\n            is_player1: false,\n            is_player2: false,\n            has_cashed_out_player1_bet: false,\n            has_cashed_out_player2_bet: false,\n            has_host_cashed_out: false,\n            has_player1_cashed_out: false,\n            has_player2_cashed_out: false,\n            winner_cut: 0,\n            host_cut: 0,\n            web3: null, accounts: null, contract: null, network_id: 0 };\n\n  constructor(props) {\n    super(props);\n    this.updateStats = this.updateStats.bind(this);\n    this.onGetAccounts = this.onGetAccounts.bind(this);\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  async updateStats() {\n    console.log(\"a\")\n    if(this.state.network_id != this.state.required_network)\n    return;\n    \n    console.log(this.state.required_network);\n    console.log(this.state.network_id);\n      \n    const { accounts, contract } = this.state;\n    \n    const player1_name = await contract.methods.getPlayer1Name(this.state.money_match_id).call();\n    const player2_name = await contract.methods.getPlayer2Name(this.state.money_match_id).call();\n    const summary = await contract.methods.getSummary(this.state.money_match_id).call();\n    const image_ipfs_hash = await contract.methods.getImageIPFSHash(this.state.money_match_id).call();\n    const player1_pot = await contract.methods.getPlayer1Pot(this.state.money_match_id).call();\n    const player2_pot = await contract.methods.getPlayer2Pot(this.state.money_match_id).call();\n    const cut_free_pot = await contract.methods.getCutFreePot(this.state.money_match_id).call();\n    const my_player1_bet = await contract.methods.getPlayer1BetByAddress(this.state.money_match_id, accounts[0]).call();\n    const my_player2_bet = await contract.methods.getPlayer2BetByAddress(this.state.money_match_id, accounts[0]).call();\n    const is_bets_open = await contract.methods.isBetsOpen(this.state.money_match_id).call();\n    const is_cashout_enabled = await contract.methods.isCashoutEnabled(this.state.money_match_id).call();\n    const is_player1_wins = await contract.methods.isPlayer1Wins(this.state.money_match_id).call();\n    const is_player2_wins = await contract.methods.isPlayer2Wins(this.state.money_match_id).call();\n    const is_host = await contract.methods.isAddressHost(this.state.money_match_id, accounts[0]).call();\n    const is_player1 = await contract.methods.isAddressPlayer1(this.state.money_match_id, accounts[0]).call();\n    const is_player2 = await contract.methods.isAddressPlayer2(this.state.money_match_id, accounts[0]).call();\n    const has_cashed_out_player1_bet = await contract.methods.hasCashedOutPlayer1Bet(this.state.money_match_id, accounts[0]).call();\n    const has_cashed_out_player2_bet = await contract.methods.hasCashedOutPlayer2Bet(this.state.money_match_id, accounts[0]).call();\n    const has_host_cashed_out = await contract.methods.hasHostCashedOut(this.state.money_match_id).call();\n    const has_player1_cashed_out = await contract.methods.hasPlayer1CashedOut(this.state.money_match_id).call();\n    const has_player2_cashed_out = await contract.methods.hasPlayer2CashedOut(this.state.money_match_id).call();\n    const host_cut = await contract.methods.getHostCut(this.state.money_match_id).call();\n    const winner_cut = await contract.methods.getWinnerCut(this.state.money_match_id).call();\n    \n    var total_pot = Number(player1_pot) + Number(player2_pot);\n    var my_player1_earnings = my_player1_bet * cut_free_pot / player1_pot;\n    var my_player2_earnings = my_player2_bet * cut_free_pot / player2_pot;\n    if(player1_pot === \"0\")\n    {\n      my_player1_earnings = 0;\n    }\n    if(player2_pot === \"0\")\n    {\n      my_player2_earnings = 0;\n    }\n    this.setState({\n      player1_name: this.state.web3.utils.hexToUtf8(player1_name),\n      player2_name: this.state.web3.utils.hexToUtf8(player2_name),\n      summary: summary,\n      image_ipfs_hash: image_ipfs_hash,\n      player1_pot: player1_pot,\n      player2_pot: player2_pot,\n      my_player1_bet: this.state.web3.utils.fromWei(my_player1_bet,'ether'),\n      my_player2_bet: this.state.web3.utils.fromWei(my_player2_bet,'ether'),\n      total_pot: this.state.web3.utils.fromWei(total_pot.toString(), 'ether'),\n      my_player1_earnings: this.state.web3.utils.fromWei(\"\"+my_player1_earnings, 'ether'),\n      my_player2_earnings: this.state.web3.utils.fromWei(\"\"+my_player2_earnings, 'ether'),\n      is_bets_open: is_bets_open,\n      is_cashout_enabled: is_cashout_enabled,\n      is_player1_wins: is_player1_wins,\n      is_player2_wins: is_player2_wins,\n      is_host: is_host,\n      is_player1: is_player1,\n      is_player2: is_player2,\n      has_cashed_out_player1_bet: has_cashed_out_player1_bet,\n      has_cashed_out_player2_bet: has_cashed_out_player2_bet,\n      has_host_cashed_out: has_host_cashed_out,\n      has_player1_cashed_out: has_player1_cashed_out,\n      has_player2_cashed_out: has_player2_cashed_out,\n      host_cut: this.state.web3.utils.fromWei(host_cut,'ether'),\n      winner_cut: this.state.web3.utils.fromWei(winner_cut,'ether')\n    });\n  }\n\n  async getOtherMoneyMatches() {\n    if(this.state.network_id !== this.state.required_network)\n      return;\n    \n    const { contract } = this.state;\n    var that = this;\n    \n    contract.getPastEvents('MoneyMatchCreated', {\n      fromBlock: 0,\n      toBlock: 'latest'\n    }, function(error, events){\n      var i = 0;\n      var other_money_matches = [];\n      for (i=0; i<events.length; i++) {\n        var eventObj = events[i];\n        other_money_matches.push({\n          id: eventObj.returnValues.id,\n          player1_name: that.state.web3.utils.hexToUtf8(eventObj.returnValues.player1_name),\n          player2_name: that.state.web3.utils.hexToUtf8(eventObj.returnValues.player2_name),\n          summary: eventObj.returnValues.summary,\n          image_ipfs_hash: eventObj.returnValues.image_ipfs_hash\n        });\n      }\n      that.setState({other_money_matches: other_money_matches});\n    });\n  }\n\n  onGetAccounts(e,accounts)\n  {\n    if(accounts.length>0)\n      this.connectToWeb3();\n  }\n\n  componentDidMount = async () => {\n    if(window.ethereum)\n      this.setState({network_id: parseInt(window.ethereum.networkVersion)});\n    if(window.web3 && window.web3.eth)\n      window.web3.eth.getAccounts(this.onGetAccounts)\n  }\n\n  connectToWeb3 = async () => \n  {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const network_id = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorageContract.networks[network_id];\n      const instance = new web3.eth.Contract(\n        SimpleStorageContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n      \n      if(this.props.match.params.money_match_id)\n        this.setState({money_match_id: this.props.match.params.money_match_id});\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance, network_id }, this.runExample);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  cashOutPlayer1BetJS = async () => {\n    const { accounts, contract } = this.state;\n    // Stores a given value, 5 by default.\n    await contract.methods.cashOutPlayer1Bet(this.state.money_match_id).send({ from: accounts[0] });\n\n    this.updateStats();\n  };\n\n  cashOutPlayer2BetJS = async () => {\n    const { accounts, contract } = this.state;\n    // Stores a given value, 5 by default.\n    await contract.methods.cashOutPlayer2Bet(this.state.money_match_id).send({ from: accounts[0] });\n\n    this.updateStats();\n  };\n\n  runExample = async () => {\n    this.updateStats();\n    this.getOtherMoneyMatches();\n  };\n\n  render() {\n    const otherMoneyMatches = this.state.other_money_matches.map((money_match) =>\n      <Card>\n        <Heading.h4>{money_match.player1_name} vs {money_match.player2_name}</Heading.h4>\n        <Link href={\"/money_match/\" + money_match.id}>\n          <Image href=\"/host\" width=\"200\" src={\"http://ipfs.io/ipfs/\" + money_match.image_ipfs_hash}></Image>\n        </Link>\n        <Text>{money_match.summary}</Text>\n        <Box>\n          <Link href={\"/money_match/\" + money_match.id}>\n            Go to money match\n          </Link>\n        </Box>\n      </Card>\n    );\n    return (\n      <Box maxWidth={'640px'} mx={'auto'} p={3}>\n        <Card>\n          <NetworkIndicator currentNetwork={this.state.network_id} requiredNetwork={this.state.required_network}/>\n          <ConnectionBanner\n            currentNetwork={this.state.network_id}\n            requiredNetwork={this.state.required_network}\n            onWeb3Fallback={window.ethereum == null}\n          />\n        </Card>\n        {this.state.web3 &&\n          <Box>\n            <Card>\n              <Heading.h1>{this.state.player1_name} vs {this.state.player2_name}</Heading.h1>\n              {!this.state.is_cashout_enabled &&\n                <Heading.h2>There's {this.state.total_pot} eth on the line!</Heading.h2>\n              }\n              <Image\n                borderRadius={8}\n                height=\"auto\"\n                width=\"640\"\n                mx={'auto'} p={3}\n                src={\"http://ipfs.io/ipfs/\" + this.state.image_ipfs_hash}\n              />\n              {this.state.is_player1_wins &&\n                <Heading.h2>It has been decided: {this.state.player1_name} Wins!</Heading.h2>\n              }\n              {this.state.is_player2_wins &&\n                <Heading.h2>It has been decided: {this.state.player2_name} Wins!</Heading.h2>\n              }\n              {this.state.my_player1_bet > 0 && !this.state.is_cashout_enabled &&\n                <Box>\n                  <Heading.h2>You betted {this.state.my_player1_bet} eth on {this.state.player1_name}</Heading.h2>\n                  <Text>If {this.state.player1_name} wins you get {this.state.my_player1_earnings} eth</Text>\n                </Box>\n              }\n              {this.state.my_player2_bet > 0 && !this.state.is_cashout_enabled &&\n                <Box>\n                  <Heading.h2>You betted {this.state.my_player2_bet} eth on {this.state.player2_name}</Heading.h2>\n                  <Text>If {this.state.player2_name} wins you get {this.state.my_player2_earnings} eth</Text>\n                </Box>\n              }\n              {this.state.is_cashout_enabled && this.state.my_player1_bet > 0 && this.state.is_player1_wins &&\n                <Box>\n                  <Heading.h2>Congratulations!</Heading.h2>\n                  <Button width={1} onClick={this.cashOutPlayer1BetJS}>\n                    Collect {this.state.my_player1_earnings} eth\n                  </Button>\n                </Box>\n              }\n              {this.state.is_cashout_enabled && this.state.my_player2_bet > 0 && this.state.is_player2_wins &&\n                <Box>\n                  <Heading.h2>Congratulations!</Heading.h2>\n                  <Button width={1} onClick={this.cashOutPlayer2BetJS}>\n                  Collect {this.state.my_player2_earnings} eth\n                  </Button>\n                </Box>\n              }\n              {this.state.player1_pot !== \"0\" && this.state.player2_pot !== \"0\" &&\n                <BetChart player1_pot={this.state.player1_pot} player2_pot={this.state.player2_pot} player1_name={this.state.player1_name} player2_name={this.state.player2_name} />\n              }\n              {this.state.my_player1_bet <= 0 && this.state.my_player2_bet <= 0 && this.state.is_bets_open &&\n                <Text>You still have no bets placed. Place your bet now and support your favorite player!</Text>\n              }\n              {this.state.is_bets_open &&\n                <BetForm\n                  contract={this.state.contract}\n                  money_match_id={this.state.money_match_id}\n                  web3={this.state.web3}\n                  player1_name={this.state.player1_name}\n                  player2_name={this.state.player2_name}\n                  account={this.state.accounts[0]}\n                  updateStats={this.updateStats}\n                  bet_some_more_flag={(this.state.my_player1_bet > 0 || this.state.my_player2_bet > 0) && this.state.is_bets_open}\n                />\n              }\n              {!this.state.is_bets_open && !this.state.is_cashout_enabled &&\n                <Text>Bets are closed now, join and watch the show with us!</Text>\n              }\n              {!this.state.is_bets_open && this.state.is_cashout_enabled && this.state.my_player1_bet <= 0 && this.state.my_player2_bet <= 0 &&\n                <Text>This money match just finished, stay tuned for the next one!</Text>\n              }\n              <Heading.h3>About this money match</Heading.h3>\n              <Text>{this.state.summary}</Text>\n              <Heading.h3>More community money matches</Heading.h3>\n              {this.state.is_host &&\n                <HostControl\n                  contract={this.state.contract}\n                  money_match_id={this.state.money_match_id}\n                  account={this.state.accounts[0]}\n                  player1_name={this.state.player1_name}\n                  player2_name={this.state.player2_name}\n                  is_cashout_enabled={this.state.is_cashout_enabled}\n                  host_cut={this.state.host_cut}\n                  has_host_cashed_out={this.state.has_host_cashed_out}\n                />\n              }\n              {this.state.is_player1 &&\n                <Player1Control\n                  contract={this.state.contract}\n                  money_match_id={this.state.money_match_id}\n                  account={this.state.accounts[0]}\n                  is_player1_wins={this.state.is_player1_wins}\n                  player1_name={this.state.player1_name}\n                  is_cashout_enabled={this.state.is_cashout_enabled}\n                  winner_cut={this.state.winner_cut}\n                  has_player1_cashed_out={this.state.has_player1_cashed_out}\n                />\n              }\n              {this.state.is_player2 &&\n                <Player2Control\n                  contract={this.state.contract}\n                  money_match_id={this.state.money_match_id}\n                  account={this.state.accounts[0]}\n                  is_player2_wins={this.state.is_player2_wins}\n                  player2_name={this.state.player2_name}\n                  is_cashout_enabled={this.state.is_cashout_enabled}\n                  winner_cut={this.state.winner_cut}\n                  has_player2_cashed_out={this.state.has_player2_cashed_out}\n                />\n              }\n            </Card>\n            <Card>\n              {otherMoneyMatches}\n              <Link href=\"/host\">\n                Host a money match\n              </Link>\n            </Card>\n          </Box>\n        }\n        {!this.state.web3 &&\n          <Card>\n            <Text>Loading Web3, accounts, and contract...</Text>\n            <Button onClick={this.connectToWeb3}>Connect your Ethereum Account</Button>\n          </Card>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { Box, Heading, Text, Link } from \"rimble-ui\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Box bg=\"primary\" p={3} justifyContent=\"center\" flexDirection=\"column\">\n        <Box maxWidth=\"600px\" mx=\"auto\">\n          <Link href=\"/\">\n            <Heading fontSize={4} color={\"white\"}>AtomicBuster.com</Heading>\n            <Text italic color={\"white\"}>Bet and support your favorite players</Text>\n          </Link>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Host from './Host';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport {ThemeProvider} from 'styled-components'\nimport {theme} from 'rimble-ui'\nimport Header from \"./components/Header\";\n\nfunction AppRouter() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div>\n        <Header/>\n        <Router>\n          <div>\n            <Route path=\"/host/\" component={Host} />\n            <Route path=\"/money_match/:money_match_id?\" component={App} />\n            <Route path=\"/\" exact component={App} />\n          </div>\n        </Router>\n      </div>\n    </ThemeProvider>\n  );\n}\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\nReactDOM.render(\n  AppRouter(),\n  document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    ( async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:9545\"\n        );\n        const web3 = new Web3(provider);\n        resolve(web3);\n      }\n    })();\n  });\n\nexport default getWeb3;\n","import React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport ipfs from './ipfs'\nimport { Input, Heading, Box, Button, Field } from \"rimble-ui\";\n\nclass Admin extends Component {\n  state = { money_match_id: \"1\", // Hardcoded preset\n            address_player1: \"\",\n            address_player2: \"\",\n            host_cut_percentage: \"\",\n            winner_cut_percentage: \"\",\n            player1_name: \"\",\n            player2_name: \"\",\n            summary: \"\",\n            image_buffer: null,\n            image_ipfs_hash: \"\",\n            web3: null, accounts: null, contract: null };\n\n  constructor(props) {\n    super(props);\n\n    this.handleAddressPlayer1Change = this.handleAddressPlayer1Change.bind(this);\n    this.handleAddressPlayer2Change = this.handleAddressPlayer2Change.bind(this);\n    this.handleHostCutPercentageChange = this.handleHostCutPercentageChange.bind(this);\n    this.handleWinnerCutPercentageChange = this.handleWinnerCutPercentageChange.bind(this);\n    this.handlePlayer1NameChange = this.handlePlayer1NameChange.bind(this);\n    this.handlePlayer2NameChange = this.handlePlayer2NameChange.bind(this);\n    this.handleSummaryChange = this.handleSummaryChange.bind(this);\n    this.handleImageChange = this.handleImageChange.bind(this);\n  }\n  \n  handlePlayer1NameChange(event) {\n    this.setState({ player1_name: this.state.web3.utils.utf8ToHex(event.target.value) });\n  }\n  handlePlayer2NameChange(event) {\n    this.setState({ player2_name: this.state.web3.utils.utf8ToHex(event.target.value) });\n  }\n\n  handleAddressPlayer1Change(event) {\n    this.setState({address_player1: event.target.value});\n  }\n\n  handleAddressPlayer2Change(event) {\n    this.setState({address_player2: event.target.value});\n  }\n\n  handleHostCutPercentageChange(event) {\n    this.setState({host_cut_percentage: event.target.value});\n  }\n\n  handleWinnerCutPercentageChange(event) {\n    this.setState({winner_cut_percentage: event.target.value});\n  }\n\n  handleSummaryChange(event) {\n    this.setState({summary: event.target.value });\n  }\n\n  handleImageChange(event) {\n    const file = event.target.files[0];\n    const reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => {\n      this.setState({ image_buffer: Buffer(reader.result) });\n    }\n  }\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorageContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        SimpleStorageContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance }, this.runExample);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  createMoneyMatchJS = async () => {\n    const { accounts, contract } = this.state;\n\n    await ipfs.files.add(this.state.image_buffer, (error, result) => {\n      if(error) {\n        console.log(error);\n        return;\n      }\n      this.setState({ image_ipfs_hash: result[0].hash });\n      //console.log(this.state.image_ipfs_hash);\n\n      contract.methods.createMoneyMatch(\n        this.state.player1_name,\n        this.state.player2_name,\n        this.state.address_player1,\n        this.state.address_player2,\n        this.state.winner_cut_percentage,\n        this.state.host_cut_percentage,\n        this.state.summary,\n        this.state.image_ipfs_hash).send({ from: accounts[0] });\n    });\n  };\n\n  runExample = async () => {\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    return (\n      <Box maxWidth={'640px'} mx={'auto'} p={3}>\n        <Heading>Create money match</Heading>\n        <Field label=\"Player 1 name\">\n          <Input type=\"text\" required={true} placeholder=\"e.g. Daigo\" onChange={this.handlePlayer1NameChange} />\n        </Field>\n        <Field label=\"Player 2 name\">\n          <Input type=\"text\" required={true} placeholder=\"e.g. Uncle Valle\" onChange={this.handlePlayer2NameChange} />\n        </Field>\n        <Field label=\"Player 1 address\">\n          <Input type=\"text\" required={true} placeholder=\"e.g. 0x730bF3B67090511A64ABA060FbD2F7903536321E\" onChange={this.handleAddressPlayer1Change} />\n        </Field>\n        <Field label=\"Player 2 address\">\n          <Input type=\"text\" required={true} placeholder=\"e.g. 0x730bF3B67090511A64ABA060FbD2F7903536321E\" onChange={this.handleAddressPlayer2Change} />\n        </Field>\n        <Field label=\"Host cut percentage\">\n          <Input type=\"text\" required={true} placeholder=\"e.g. 3\" onChange={this.handleHostCutPercentageChange} />\n        </Field>\n        <Field label=\"Winner cut percentage\">\n          <Input type=\"text\" required={true} placeholder=\"e.g. 10\" value={this.state.winner_cut_percentage} onChange={this.handleWinnerCutPercentageChange} />\n        </Field>\n        <Field label=\"Summary\">\n          <Input type=\"text\" required={true} placeholder=\"e.g. 14/2 8PM GMT @ twitch.com/evo\" onChange={this.handleSummaryChange} />\n        </Field>\n        <Field label=\"Image\">\n          <input type=\"file\" required={true} onChange={this.handleImageChange} />\n        </Field>\n        <Button onClick={this.createMoneyMatchJS}>Create</Button>\n      </Box>\n    );\n  }\n}\n\nexport default Admin;\n","const IPFS = require('ipfs-api');\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https'});\n\nexport default ipfs;"],"sourceRoot":""}